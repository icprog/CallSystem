C51 COMPILER V9.54   DS1302                                                                05/16/2016 16:53:52 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN ..\OutHex\DS1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Sources\DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\DS1302.lst) TABS(2) OBJECT(..\OutHex\DS1302.obj)

line level    source

   1          #include "../PublicSources/Headers/PreMacro.h"
   2          #include "./Headers/DS1302.h"
   3          #include <reg52.h>
   4          
   5          sbit  ACC0 = ACC ^ 0;
   6          sbit  ACC7 = ACC ^ 7;
   7          sbit RST = P3 ^ 2;
   8          sbit SCLK = P3 ^ 3;
   9          sbit IO = P3 ^ 4;
  10          
  11          #define AM(X) X
  12          #define PM(X) (X+12)                
  13          #define DS_SECOND 0x80              
  14          #define DS_MINUTE 0x82
  15          #define DS_HOUR   0x84
  16          #define DS_WEEK   0x8A
  17          #define DS_DAY    0x86
  18          #define DS_MONTH  0x88
  19          #define DS_YEAR   0x8C
  20          
  21          /**
  22           * [ds_write_byte 给DS1302写一字节]
  23           * @param dat [待写入的字节]
  24           */
  25          void ds_write_byte(u8 dat)  
  26          {
  27   1          u8 i;
  28   1          ACC = dat;
  29   1          for(i = 8; i > 0; i--)
  30   1          {
  31   2              IO = ACC0;           
  32   2              SCLK = 1;
  33   2              SCLK = 0;
  34   2              ACC = ACC >> 1;
  35   2          }
  36   1      }
  37          
  38          /**
  39           * [ds_read_byte 从DS1302中读取一字节]
  40           * @return  [读取的数据]
  41           */
  42          u8 ds_read_byte(void)   
  43          {
  44   1          u8 i;
  45   1          for(i = 8; i > 0; i--)
  46   1          {
  47   2              ACC = ACC >> 1;             
  48   2              ACC7 = IO;
  49   2              SCLK = 1;
  50   2              SCLK = 0;
  51   2          }
  52   1          return(ACC);
  53   1      }
  54          
C51 COMPILER V9.54   DS1302                                                                05/16/2016 16:53:52 PAGE 2   

  55          /**
  56           * [ds_write 给DS1302的某地址写入数据]
  57           * @param addr  [地址]
  58           * @param dat   [数据]
  59           */
  60          void ds_write(u8 addr, u8 dat)  
  61          {
  62   1          RST = 0;
  63   1          SCLK = 0;
  64   1          RST = 1;
  65   1          ds_write_byte(addr);        
  66   1          ds_write_byte(dat);         
  67   1          SCLK = 1;
  68   1          RST = 0;
  69   1      }
  70          
  71          /**
  72           * [ds_read 从DS1302的的某个地址中读取一字节数据]
  73           * @param  addr [地址]
  74           * @return      [读取的数据]
  75           */
  76          u8 ds_read(u8 addr) //读取DS1302某地址的数据
  77          {
  78   1          u8 dat;
  79   1          RST = 0;
  80   1          SCLK = 0;
  81   1          RST = 1;
  82   1          ds_write_byte(addr | 0x01);      // 地址，命令
  83   1          dat = ds_read_byte();         // 读1Byte数据
  84   1          SCLK = 1;
  85   1          RST = 0;
  86   1          return(dat);
  87   1      }
  88          
  89          /**
  90           * [ds_get_time [获取DS1302中的时间]
  91           * @param Time  [时间]
  92           */
  93          void ds_get_time(SysTime *Time)  //获取时钟芯片的时钟数据到自定义的结构型数组
  94          {
  95   1          u8 read_value;
  96   1          read_value = ds_read(DS_SECOND);
  97   1          Time->second = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
  98   1          read_value = ds_read(DS_MINUTE);
  99   1          Time->minute = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 100   1          read_value = ds_read(DS_HOUR);
 101   1          Time->hour = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 102   1          read_value = ds_read(DS_DAY);
 103   1          Time->day = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 104   1          read_value = ds_read(DS_WEEK);
 105   1          Time->week = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 106   1          read_value = ds_read(DS_MONTH);
 107   1          Time->month = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 108   1          read_value = ds_read(DS_YEAR);
 109   1          Time->year = ((read_value & 0x70) >> 4) * 10 + (read_value & 0x0F);
 110   1      }
 111          
 112          
 113          /**
 114           * [ds_init DS1302初始化]
 115           */
 116          void ds_init(void)   
C51 COMPILER V9.54   DS1302                                                                05/16/2016 16:53:52 PAGE 3   

 117          {
 118   1          u8 second = ds_read(DS_SECOND);
 119   1          if(second & 0x80)     
 120   1          {
 121   2              ds_write(0x8e, 0x00); 
 122   2              ds_write(0x8c, 0x07); 
 123   2              ds_write(0x88, 0x07);
 124   2              ds_write(0x86, 0x25);
 125   2              ds_write(0x8a, 0x07);
 126   2              ds_write(0x84, 0x23);
 127   2              ds_write(0x82, 0x59);
 128   2              ds_write(0x80, 0x55);
 129   2              ds_write(0x8e, 0x80); 
 130   2          }
 131   1      
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    324    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
