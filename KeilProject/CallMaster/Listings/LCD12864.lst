C51 COMPILER V9.54   LCD12864                                                              05/16/2016 16:54:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\OutHex\LCD12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Sources\LCD12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\LCD12864.lst) TABS(2) OBJECT(..\OutHex\LCD12864.obj)

line level    source

   1          #include "../PublicSources/Headers/PreMacro.h"
   2          #include "./Headers/LcdCharacters.h"
   3          #include "./Headers/LCD12864.h"
   4          #include <reg52.h>
   5          
   6          #define ON  0
   7          #define OFF 1
   8          
   9          sbit  LCD_CS_LEFT = P2 ^ 0;       /* LCD右屏幕 */
  10          sbit  LCD_CS_RIGHT  = P2 ^ 1;       /* LCD左屏幕 */
  11          sbit  LCD_RS    = P2 ^ 2;       /* LCD数据、指令寄存器 */
  12          sbit  LCD_RW    = P2 ^ 3;       /* LCD读、写操作 */
  13          sbit  LCD_EN    = P2 ^ 4;       /* LCD使能信号，下降沿有效 */
  14          
  15          /*选屏参数 */
  16          typedef enum _SCREEN
  17          {
  18              ALL = 0, LEFT, RIGHT
  19          } SCREEN;
  20          
  21          
  22          /**
  23           * [lcd_write_cmd LCD写入命令]
  24           * @param cmd [命令]
  25           */
  26          void lcd_write_cmd( u8 cmd )
  27          {
  28   1          LCD_RW  = 0;
  29   1          LCD_RS  = 0;
  30   1          LCD_EN  = 1;
  31   1          P0  = cmd;
  32   1          LCD_EN  = 0;
  33   1      }
  34          
  35          
  36          /**
  37           * [lcd_write_byte LCD写入一字节数据]
  38           * @param byte [数据]
  39           */
  40          void lcd_write_byte( u8 byte )
  41          {
  42   1          LCD_RW  = 0;
  43   1          LCD_RS  = 1;
  44   1          LCD_EN  = 1;
  45   1          P0  = byte;
  46   1          LCD_EN  = 0;
  47   1      }
  48          
  49          
  50          /**
  51           * [select_screen LCD选屏]
  52           * @param screen [选屏参数]
  53           */
  54          void select_screen( SCREEN screen )
C51 COMPILER V9.54   LCD12864                                                              05/16/2016 16:54:07 PAGE 2   

  55          {
  56   1          switch ( screen )
  57   1          {
  58   2          case ALL:       /*选择全屏 */
  59   2              LCD_CS_LEFT = ON;
  60   2              LCD_CS_RIGHT  = ON;
  61   2              break;
  62   2          case LEFT:      /*选择左屏 */
  63   2              LCD_CS_LEFT = ON;
  64   2              LCD_CS_RIGHT  = OFF;
  65   2              break;
  66   2          case RIGHT:     /*选择右屏 */
  67   2              LCD_CS_LEFT = OFF;
  68   2              LCD_CS_RIGHT  = ON;
  69   2              break;
  70   2          default:        /* 关闭屏幕 */
  71   2              LCD_CS_LEFT = OFF;
  72   2              LCD_CS_RIGHT  = OFF;
  73   2              break;
  74   2          }
  75   1      }
  76          
  77          
  78          
  79          
  80          
  81          /**
  82           * [lcd_cls LCD清屏操作]
  83           * @param screen [选屏参数]
  84           */
  85          void lcd_cls( SCREEN screen )
  86          {
  87   1          int x, y;
  88   1          select_screen( screen );        /* screen:0-选择全屏，1-选择左半屏，2-选择右半屏 */
  89   1          for ( x = 0xb8; x < 0xc0; x++ ) /* 从0xb8-0xbf,共8页 */
  90   1          {
  91   2              lcd_write_cmd( x );
  92   2              lcd_write_cmd( 0x40 );  /* 列的初始地址是0x40 */
  93   2              for ( y = 0; y < 64; y++ )
  94   2              {
  95   3                  lcd_write_byte( 0x00 );
  96   3              }
  97   2          }
  98   1      }
  99          
 100          void lcd_clean_row(u8 row)
 101          {
 102   1          u8 col, x;
 103   1          row *= 2;
 104   1          row += 0xb8;
 105   1          for(x = row; x <= row + 1; ++x)
 106   1          {
 107   2              lcd_write_cmd( x );
 108   2              lcd_write_cmd( 0x40 );  /* 列的初始地址是0x40 */
 109   2      
 110   2              for(col = 0; col < 64; ++col)
 111   2              {
 112   3                  lcd_write_byte(0x00);
 113   3              }
 114   2          }
 115   1      }
 116          
C51 COMPILER V9.54   LCD12864                                                              05/16/2016 16:54:07 PAGE 3   

 117          void lcd_row_up()
 118          {
 119   1      
 120   1      }
 121          
 122          
 123          /**
 124           * [lcd_init LCD初始化]
 125           */
 126          void lcd_init()
 127          {
 128   1          lcd_write_cmd( 0x3f );  /* LCD开显示 */
 129   1          lcd_write_cmd( 0xc0 );  /* LCD行初始地址，共64行 */
 130   1          lcd_write_cmd( 0xb8 );  /* LCD页初始地址，共8页 */
 131   1          lcd_write_cmd( 0x40 );  /* LCD列初始地址，共64列 */
 132   1      }
 133          
 134          
 135          /**
 136           * [lcd_set_coords LCD设置显示坐标]
 137           * @param row [横坐标]
 138           * @param col [纵坐标]
 139           */
 140          void lcd_set_coords( u8 row, u8 col )
 141          {
 142   1          lcd_write_cmd( 0xb8 + row );
 143   1          lcd_write_cmd( 0x40 + (col * 8) );
 144   1      }
 145          
 146          
 147          /**
 148           * [lcd_write_char LCD写入一个字节]
 149           * @param row [横坐标]
 150           * @param col [纵坐标]
 151           * @param c   [待写入的字节]
 152           */
 153          void lcd_write_char( u8 row, u8 col, u8 c )
 154          {
 155   1          u8 i, calc_col;
 156   1          calc_col = col;
 157   1      
 158   1          if ( col <= 7 )
 159   1              select_screen( LEFT );
 160   1          else
 161   1          {
 162   2              calc_col = col - 8;
 163   2              select_screen( RIGHT );
 164   2          }
 165   1          lcd_set_coords( row, calc_col );
 166   1      
 167   1          c -= 32;
 168   1          lcd_set_coords( row, calc_col );
 169   1          for ( i = 0; i < 16; i++ )
 170   1          {
 171   2              if ( i == 8 )
 172   2              {
 173   3                  lcd_set_coords( row + 1, calc_col );
 174   3              }
 175   2              lcd_write_byte( font8x16[c][i] );
 176   2          }
 177   1      }
 178          
C51 COMPILER V9.54   LCD12864                                                              05/16/2016 16:54:07 PAGE 4   

 179          
 180          /**
 181           * [lcd_write_string LCD写入以字符串]
 182           * @param row [横坐标]
 183           * @param col [纵坐标]
 184           * @param ptr [待写入的字符串]
 185           */
 186          void lcd_write_string( u8 row, u8 col, char *ptr )
 187          {
 188   1          row *= 2;
 189   1          while ( *ptr != NULL )
 190   1          {
 191   2              if ( col > 15 )
 192   2              {
 193   3                  row += 2;
 194   3                  col = 0;
 195   3                  if ( row > 7 )
 196   3                  {
 197   4                      row = 0;
 198   4                  }
 199   3              }
 200   2              lcd_write_char( row, col++, *ptr );
 201   2              ++ptr;
 202   2          }
 203   1      }
 204          
 205          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    351    ----
   CONSTANT SIZE    =   1696    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
